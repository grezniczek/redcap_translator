<?php namespace RUB\REDCapTranslatorExternalModule;

class Downloader {

    /**
     * Downloads files
     * @param REDCapTranslatorExternalModule $m 
     * @return void 
     */
    public static function start($m) {
        try {
            $version = $_GET["version"] ?? "";
            $mode = $_GET["mode"] ?? "";
            $code = $_GET["code"] === "1";
            $brute = $_GET["brute"] === "1";
            $err_unsupported = "Unsupported action.";
            $err_nofile = "Failed to locate file on server.";
            $err_invalidzip = "Failed to open ZIP archive (#CODE#). Damaged file?";
            // Verify valid action
            if (!in_array($mode, ["package-get-strings", "package-get-zip", "gen-metadata-json"], true)) return $err_unsupported;
            // Verify stored version
            $stored = $m->getSystemSetting(REDCapTranslatorExternalModule::UPLOADS_SETTING_NAME) ?? [];
            if (!array_key_exists($version, $stored)) return $err_unsupported;
            $edoc_id = $stored[$version];
            // Get metadata
            $sql = "SELECT * FROM redcap_edocs_metadata WHERE doc_id = ? AND ISNULL(project_id) AND (delete_date IS NULL OR (delete_date IS NOT NULL AND delete_date > '".NOW."'))";
            $result = $m->query($sql, [$edoc_id]);
            $file_info = db_fetch_assoc($result);
            if (empty($file_info) || $file_info["doc_id"] != $edoc_id) return $err_nofile;
            // Download ZIP package
            if ($mode == "package-get-zip") {
                // Copy file and serve, then delete
                $local_file = \Files::copyEdocToTemp($edoc_id);
                header('Content-Type: '.$file_info['mime_type'].'; name="'.$file_info['doc_name'].'"');
                header('Content-Disposition: attachment; filename="'.$file_info['doc_name'].'"');
                readfile_chunked($local_file);
                unlink($local_file);
                exit;
            }
            // Get the strings
            if ($mode == "package-get-strings") {
                $result = REDCapTranslatorExternalModule::get_strings_from_zip($edoc_id, $version);
                if (is_array($result)) {
                    $ini_name = "English_v$version.ini";
                    header('Content-Type: text/plain; name="'.$ini_name.'"');
                    header('Content-Disposition: attachment; filename="'.$ini_name.'"');
                    print REDCapTranslatorExternalModule::strings_to_ini($result, "; English.ini - REDCap v$version [generated by REDCap Translator EM]");
                }
                else {
                    print str_replace("#CODE#", $result, $err_invalidzip);
                }
                exit;
            }
            // Get the strings metadata
            if ($mode == "gen-metadata-json") {
                $previous = null; // TODO 
                $result = REDCapTranslatorExternalModule::generate_metadata($edoc_id, $version, $m->VERSION, $code, $brute, $previous);
                $json_name = "REDCap_v{$version}_Strings_Metadata.json";
                header('Content-Type: application/json; name="'.$json_name.'"');
                header('Content-Disposition: attachment; filename="'.$json_name.'"');
                print json_encode($result, JSON_PRETTY_PRINT);
                exit;
            }
        }
        catch(\Throwable $t) {
            print "ERROR while generating downloadable file: ".$t->getMessage();
        }
    }
}
print Downloader::start($module);
